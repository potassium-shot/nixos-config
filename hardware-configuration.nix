# Do not modify this file!	It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.	Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
	imports =
		[ (modulesPath + "/installer/scan/not-detected.nix")
	./underclock.nix
		];

	boot.initrd.availableKernelModules = [ "nvme" "xhci_pci" "ahci" "usbhid" "usb_storage" "sd_mod" ];
	boot.initrd.kernelModules = [ ];
	boot.kernelModules = [ "kvm-amd" ];
	boot.extraModulePackages = [ ];
	boot.kernelParams = [ "nvidia-drm.modeset=1" ];

	fileSystems."/" =
		{ device = "/dev/disk/by-uuid/1402894d-0f65-493b-ac05-9359cf3047b3";
			fsType = "ext4";
		};

	fileSystems."/boot" =
		{ device = "/dev/disk/by-uuid/DD5A-41A5";
			fsType = "vfat";
			options = [ "fmask=0077" "dmask=0077" ];
		};

	swapDevices =
		[ { device = "/dev/disk/by-uuid/af08ea26-3b54-4260-bb71-7a37afa9cd24"; }
		];

	# Enables DHCP on each ethernet and wireless interface. In case of scripted networking
	# (the default) this is the recommended approach. When using systemd-networkd it's
	# still possible to use this option, but it's recommended to use it in conjunction
	# with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
	networking.useDHCP = lib.mkDefault true;
	# networking.interfaces.enp4s0.useDHCP = lib.mkDefault true;
	# networking.interfaces.wlp5s0.useDHCP = lib.mkDefault true;

	nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
	hardware.cpu.amd.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;

	hardware.graphics.enable = true;
	services.xserver.videoDrivers = [ "nvidia" ];

	hardware.nvidia =
	{
		modesetting.enable = true;
		powerManagement.enable = false;
		powerManagement.finegrained = false;
		open = true;
		nvidiaSettings = true;
	};
	
	environment.systemPackages = with pkgs; [
		libva-utils
		vdpauinfo
		vulkan-tools
		vulkan-validation-layers
		libvdpau-va-gl
		egl-wayland
		wgpu-utils
		mesa
		libglvnd
		nvitop
		libGL
	];
}
